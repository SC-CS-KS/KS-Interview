(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{286:function(t,a,r){"use strict";r.r(a);var e=r(28),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"profile"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[t._v("#")]),t._v(" Profile")]),t._v(" "),r("h2",{attrs:{id:"一个线程如果出现了运行时异常会怎么样？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一个线程如果出现了运行时异常会怎么样？"}},[t._v("#")]),t._v(" 一个线程如果出现了运行时异常会怎么样？")]),t._v(" "),r("p",[t._v("如果这个异常没有被捕获的话，这个线程就停止执行了\n如果这个线程持有某个对象的监视器，那么这个对象监视器会被立即释放。")]),t._v(" "),r("h2",{attrs:{id:"如何获取到线程dump文件？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何获取到线程dump文件？"}},[t._v("#")]),t._v(" 如何获取到线程dump文件？")]),t._v(" "),r("p",[t._v("死循环、死锁、阻塞、页面打开慢等问题\n打线程dump是最好的解决问题的途径，所谓线程dump也就是线程堆栈。")]),t._v(" "),r("p",[t._v("两步")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("获取到线程的pid\n可以通过使用jps命令，在Linux环境下还可以使用ps -ef | grep java")])]),t._v(" "),r("li",[r("p",[t._v("打印线程堆栈\n可以通过使用jstack pid命令，在Linux环境下还可以使用 kill -3 pid")])])]),t._v(" "),r("p",[t._v("Thread类提供了一个getStackTrace()方法也可以用于获取线程堆栈，"),r("br"),t._v("\n这是一个实例方法，因此此方法是和具体线程实例绑定的，每次获取获取到的是具体某个线程当前运行的堆栈。")]),t._v(" "),r("h2",{attrs:{id:"查找哪个线程使用cpu最长？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查找哪个线程使用cpu最长？"}},[t._v("#")]),t._v(" 查找哪个线程使用CPU最长？")]),t._v(" "),r("p",[t._v("获取项目的 pid，jps 或者 ps -ef | grep java"),r("br"),t._v("\ntop -H -p pid")])])}),[],!1,null,null,null);a.default=s.exports}}]);